function [dx_SF,dy_SF] = sf_derivate(SF)    % This script defines matrices called dx_SF and dy_SF saving in each row the derivate of a shape function in x direction and y direction.     % The derivatives are represented as coefficient vectors.    % The shape functions are in lexicographical order. More over the shape functions and their derivatives are defined on the unit square.    % We want to use transformations to transform those shape functions to the shape functions of individual cells.        % Initialization     pol_deg= sqrt(length(SF))-1;    dx_SF = zeros(rows(SF),length(SF));    dy_SF = zeros(rows(SF),length(SF));        % ----- Compute derivatives -----    for row=1:rows(SF)        % read shape function         shape_function = SF(row,:);        % dx_SF        for i=1:pol_deg            for j=0:pol_deg                dx_SF(row,hf_exponent_to_column(i-1,j))= i*shape_function(hf_exponent_to_column(i,j));            endfor        endfor        for i=0:pol_deg            for j=1:pol_deg                dy_SF(row,hf_exponent_to_column(i,j-1))= j*shape_function(hf_exponent_to_column(i,j));            endfor        endfor    endfor    % -------------------------------endfunction